Make all objects in render system not directly creatable/destroyable.
* Make a ResourceList class which constructor takes item constructor and destructor.
  * addNew(before?: Item): Item
  * remove(item: Item): bool
  * has(item: Item): bool
  * clear(): void
* Make a ResourceSet class which constructor takes item constructor and destructor.
  * addNew(): Item
  * remove(item: Item): bool
  * has(item: Item): bool
  * clear(): void
* Scene.models will be ResourceList.
* Renderer.mesh, Renderer.textures, and Renderer.shaders will be ResourceSet.
  * When they are referenced in model, there will be a count kept,
    so that if they are removed, as in Renderer.meshes.remove(mesh), there will
	be an error thrown if the count is > 0.

Implement Uniform Buffer Objects as the main way to implement uniforms.

Use 16-bit or 32-bit indices for meshes automatically.



Game
	Viewport*
		Stage (may render other stages)
	World*
		Entity*
		Component*
